
% Find striatum boundaries on probe
%
% All parameters are empirical based on tweaking parameters and checking
% performance on AM recordings

%% Find gaps in units

% Based on number of units in a window less than a threshold

unit_gap_window = 300; % window to count units
unit_gap_window_slide = 10; % sliding time for window
unit_gap_thresh = 10; % number of units in window to be called a "gap"

unit_gap_bins = (0:unit_gap_window_slide:(max(channel_positions(:,2))-unit_gap_window)) + ...
    [0;unit_gap_window];
unit_gap_bin_centers = mean(unit_gap_bins,1);

unit_bin_counts = cellfun(@(x) histcounts(template_depths,x),num2cell(unit_gap_bins,1));

late_gap_threshold = max(channel_positions(:,2))*0.6;
if any(unit_bin_counts < unit_gap_thresh)

    [~,min_units_bin_idx] = min(unit_gap_bin_centers);

    pre_striatum_gap = unit_gap_centers(find(unit_gap_centers < late_gap_threshold,1,'last'));


end


unit_bin_thresh = unit_bin_counts <= unit_gap_thresh;

unit_gap_centers = unit_gap_bin_centers(diff(unit_bin_thresh) == -1);

% If there's no gap, just call the start of the probe an end of a gap
if isempty(unit_gap_centers)
    unit_gap_centers = min(template_depths)-1;
end


%% Striatum start
% First unit after gap (last gap in top half of probe)
% (subtract 1 um to include first unit)

late_gap_threshold = max(channel_positions(:,2))*0.6;
pre_striatum_gap = unit_gap_centers(find(unit_gap_centers < late_gap_threshold,1,'last'));

if ~isempty(pre_striatum_gap)
    striatum_start = min(template_depths(template_depths > pre_striatum_gap))-1;
else
    striatum_start = NaN;
end

%% Striatum end
% Before MUA correlation change near tip or last unit otherwise
% (add 1 um to include last unit)

% Get correlation of MUA in sliding windows
depth_corr_window = 150; % MUA window in microns
depth_corr_window_spacing = 50; % MUA window spacing in microns

max_depths = 3840; % (hardcode, sometimes kilosort drops channels)

depth_corr_bins = [0:depth_corr_window_spacing:(max_depths-depth_corr_window); ...
    (0:depth_corr_window_spacing:(max_depths-depth_corr_window))+depth_corr_window];
depth_corr_bin_centers = depth_corr_bins(1,:) + diff(depth_corr_bins,[],1)/2;

spike_binning_t = 0.1; % seconds
spike_binning_t_edges = nanmin(spike_times_openephys):spike_binning_t:nanmax(spike_times_openephys);

binned_spikes_depth = zeros(size(depth_corr_bins,2),length(spike_binning_t_edges)-1);
for curr_depth = 1:size(depth_corr_bins,2)
    curr_depth_templates_idx = ...
        find(template_depths >= depth_corr_bins(1,curr_depth) & ...
        template_depths < depth_corr_bins(2,curr_depth));

    binned_spikes_depth(curr_depth,:) = histcounts(spike_times_openephys( ...
        ismember(spike_templates,curr_depth_templates_idx)),spike_binning_t_edges);
end

mua_corr = corrcoef(binned_spikes_depth');

% Look at average correlation backwards from tip on both dimensions
depth_back = 800;
groups_back = depth_back/depth_corr_window_spacing;
mua_corr_end = medfilt2(mua_corr(end-groups_back+1:end,end-groups_back+1:end),[3,3]);
mua_corr_end(triu(true(length(mua_corr_end)),0)) = nan;
mean_corr_dim1 = nanmean(mua_corr_end,1)';
mean_corr_dim2 = nanmean(mua_corr_end,2);

% this one is to find concurrent increase/decrease (above flagged separate)
if  max(diff(mean_corr_dim1) - diff(mean_corr_dim2)) > 0.15
    % If there is a sharp concurrent drop in upper correlation and rise in
    % lower correlation, probe leaves striatum
% 
%     % If there's a correlated block at end: end of probe is correlated, and
%     % there's a dip in correlation between the middle and end
%     [~,mua_corr_switch_idx] = min(max(mean_corr_dim2,mean_corr_dim1,'includenan'));
%     depths_back_centers = depth_corr_bin_centers(end-groups_back+1:end);
%     striatum_end = depths_back_centers(mua_corr_switch_idx-1);

    [~,mua_corr_switch_idx] = max(diff(mean_corr_dim1)-diff(mean_corr_dim2));
    depths_back_centers = depth_corr_bin_centers(end-groups_back+1:end);
    striatum_end = depths_back_centers(mua_corr_switch_idx-1);

else
    % Otherwise, probe never leaves striatum, use last template
    striatum_end = max(template_depths)+1;
end

%% Set striatum depth

if ~isempty(striatum_start) && ~isempty(striatum_end)
    striatum_depth = [striatum_start;striatum_end];
else
    striatum_depth = NaN(2,1);
end


%% Get number of units in striatum

n_striatum_units = sum(template_depths >= striatum_depth(1) & template_depths <= striatum_depth(2));

% if there < N units, exclude this striatal recording
if n_striatum_units < 50
    striatum_depth = NaN(2,1);
end

%% Drop recording: if GPe included

% Compare number of spikes in pre-striatum cortex to striatum. If
% "striatum" has higher-firing units than cortex, it's GPe.
% (only use if there are decent number of cortical units(

n_cortex_units = sum(template_depths >= 0 & template_depths < striatum_depth(1));

if n_cortex_units > 50
    spike_n = accumarray(findgroups(spike_templates),1);

    ctx_v_str_thresh = 1.5;
    gpe_flag = mean(spike_n(template_depths < striatum_start))*ctx_v_str_thresh < ...
        mean(spike_n(template_depths >= striatum_start & template_depths <= striatum_end));

    if gpe_flag
        striatum_depth = NaN(2,1);
    end
end

%% Drop recording: if there's a gap in units more than halfway

late_gap = max(unit_gap_bin_centers(unit_bin_counts <= 0));

if late_gap > late_gap_threshold
    striatum_depth = NaN(2,1);
end

%% Get MUA correlation and plot

if false

    % Plot units and MUA correlation with striatum boundaries
    figure('name',sprintf('%s %s',animal,rec_day));
    mua_plot = tiledlayout(1,2);

    ha = nexttile;
    ap.plot_unit_depthrate(spike_templates,template_depths,probe_areas,ha);
    yline(striatum_depth,'r','linewidth',3);

    nexttile;
    imagesc(depth_corr_bin_centers,depth_corr_bin_centers,mua_corr);
    clim([-1,1]);
    colormap(ap.colormap('BWR'))
    xline(striatum_depth,'g','linewidth',3);
    yline(striatum_depth,'g','linewidth',3);

    linkaxes(mua_plot.Children,'y');

end



